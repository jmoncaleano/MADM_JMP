X=replicate(10,f(sample(1:4039,4, replace = TRUE)))
mean(X)
#round(mean(X),10)
Y=replicate(10,g(sample(1:4039,4, replace = TRUE)))
round(mean(Y),10)
X=replicate(10,f(sample(1:4039,4, replace = FALSE)))
mean(X)
#round(mean(X),10)
Y=replicate(10,g(sample(1:4039,4, replace = FALSE)))
round(mean(Y),10)
X=replicate(10,f(sample(1:4039,4)))
mean(X)
X=replicate(10,f(sample(1:4039,100)))
mean(X)
#round(mean(X),10)
Y=replicate(10,g(sample(1:4039,100)))
round(mean(Y),10)
X=replicate(1000,f(sample(1:4039,4)))
mean(X)
#round(mean(X),10)
Y=replicate(1000,g(sample(1:4039,4)))
round(mean(Y),10)
H=delete.vertices(facebook, 1684)
components(H)$csize[1]
components(H)$no
degree(facebook)[1684]
H=delete.vertices(facebook, 1850)
components(H)$no
Data=read.table("facebook_sample_anon.txt", quote="\"", comment.char="")
facebook=graph_from_data_frame(d=Data, directed=FALSE)
components(H)$csize[1]
degree(facebook)[1535]
H=delete.vertices(facebook, 1535)
components(H)$no
components(H)$csize[1]
components(H)$csize
H=delete.vertices(facebook, 100)
components(H)$no
components(H)$csize
mean(Y)/components(facebook)$csize[1]
ccom=function(x){
H=delete.vertices(facebook, x)
components(H)$no
#AP=average.path.length(H)
}
X=replicate(1000,ccom(sample(1:4039,4)))
mean(X)
#round(mean(X),10)
Y=replicate(1000,lgst_comp(sample(1:4039,4)))
lgst_comp=function(x){
H=delete.vertices(facebook, x)
components(H)$csize[1]
}
#round(mean(X),10)
Y=replicate(1000,lgst_comp(sample(1:4039,4)))
mean(Y)/components(facebook)$csize[1]
X=replicate(1000,ccom(sample(1:n,n*0.0001)))
round(mean(Y)/components(facebook)$csize[1],4)
mean(X)
round(mean(X),4)
round(sort(igraph::betweenness(facebook),decreasing = TRUE),4)[0:10]
round(sort(igraph::betweenness(facebook),decreasing = TRUE),4)[0:4]
sort(degree(facebook), decreasing = TRUE)[1:10]
sort(degree(facebook), decreasing = TRUE)[1:4]
c(sort(degree(facebook), decreasing = TRUE)[1:4])
c()[1]
a <- c(sort(degree(facebook), decreasing = TRUE)[1:4])
a[1]
sort(degree(facebook)$cname, decreasing = TRUE)[1:4]
str(a)
facebook$cname[107]
sort(degree(facebook)[2], decreasing = TRUE)[1:4]
sort(degree(facebook), decreasing = TRUE)[1:4]
sort(degree(facebook), "names", decreasing = TRUE)[1:4]
degree(facebook)$names
sort(degree(facebook), decreasing = TRUE)[1:4]
attr(sort(degree(facebook), decreasing = TRUE)[1:4], "names")
a <- c(attr(sort(degree(facebook), decreasing = TRUE)[1:4], "names"))
a
degree(facebook)[107]
degree(facebook)[100]
b <- degree(facebook)[100]
str(b)
attributes(facebook)[100]
vertex.attributes(facebook, 100)
?vertex.attributes
(sort(degree(facebook), decreasing = TRUE)[1:4], "names")
sort(degree(facebook), decreasing = TRUE)[1:4]
round(sort(igraph::betweenness(facebook),decreasing = TRUE),4)[0:4]
facebook1 <- delete.vertices(facebook, borar)
facebook1 <- delete.vertices(facebook, borrar)
borrar <- c(100, 1535, 3156, 1723)
facebook1 <- delete.vertices(facebook, borrar)
components(facebook1)$csize
components(facebook1)$no
components(facebook1)$csize[1]/degree(facebook)
components(facebook1)$csize[1]/gorder(facebook)
components(facebook1)$no
round(sort(igraph::betweenness(facebook1),decreasing = TRUE),4)[0:4]
round(sort(igraph::betweenness(facebook1),decreasing = TRUE),4)[1:10]
round(sort(igraph::degree(facebook1,normalized=TRUE),decreasing = TRUE),4)[1:10]
round(sort(igraph::closeness(facebook1,normalized=TRUE),decreasing =TRUE),4)[1:10]
round(sort(1/eccentricity(facebook1),decreasing =TRUE),4)[1:10]
round(sort(eigen_centrality(facebook1,scale=FALSE)$vector,decreasing=TRUE),4)[1:10]
round(sort(decay(facebook1, decay=0.5),decreasing=TRUE),4)[1:10]
library(centiserve)
round(sort(decay(facebook1, decay=0.5),decreasing=TRUE),4)[1:10]
X=replicate(1000,ccom(sample(1:4039,20)))
round(mean(X),4)
Y=replicate(1000,lgst_comp(sample(1:4039,20)))
round(mean(Y)/components(facebook)$csize[1],4)
sort(degree(facebook), decreasing = TRUE)[1:20]
mean(degree(facebook))
neighbors(facebook, 100, mode = "out")
lobby(facebook, vids = 100)
neighbors(facebook, 100, mode = "out")
mean(degree(neighbors(facebook, 100, mode = "out")))
degree(neighbors(facebook, 100, mode = "out"))
neighbors(facebook, 100, mode = "out")
borrar2 <- c(100, 1535, 3156, 1723, 953, 1, 595, 495, 52, 366, 493, 742, 352, 1431, 337, 1565, 584, 515, 128, 3624)
facebook2 <- delete.vertices(facebook, borrar2)
components(facebook2)$csize[1]/gorder(facebook) #fraction by the largest component
components(facebook2)$no  # number of connected components
round(sort(igraph::degree(facebook2,normalized=TRUE),decreasing = TRUE),4)[1:10]
degree(facebook2)
mean(degree(facebook2))
mean(degree(facebook))
?lobby
lobby(facebook, vids = x, mode = "out")
lobby(facebook, vids = 100, mode = "out")
lobby(facebook, vids = 1535, mode = "out")
lobby(facebook, vids = 1684, mode = "out")
TLC=function(G,v=as_ids(V(G))){
HH=function(x){
require(igraph)
D=as.numeric(igraph::degree(G, v=neighbors(G,v=x)))
z=sort(D,decreasing=TRUE)-(1:length(D))
max(which(z>=0))
}
unlist(sapply(v,FUN=HH))
}
TLC(facebook,c(100,107))
clusterrank(facebook)
TLC(facebook)
sort(TLC(facebook), decreasing = TRUE)[1,10]
D=as.numeric(igraph::degree(facebook, v=neighbors(G,v=x)))
D=as.numeric(igraph::degree(facebook, v=neighbors(facebook,borrar)))
D
?lobby
lobby(facebook, vids = 1684, mode = "out")
lobby(facebook, vids = 1684, mode = "out")
lobby(facebook, vids = borrar, mode = "out")
degree(facebook, 100)
lobby(facebook, 100)
lobby(facebook, 100)/degree(facebook, 100)
lobby(facebook, 100)
degree(facebook, 100)
neighborhood(facebook, 100)
neighbors(facebook, 100, mode = "out")
a=c(neighbors(facebook, 100, mode = "out"))
D=as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=100)))
D
as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=100)))
neighbors(facebook, 1)
neighbors(facebook, 1)
neighbors(facebook, 1)
neighbors(facebook, 2)
degree(facebook, 48)
as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2)))
neighbors(facebook, 2)
as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2)))
mean(a)
vecinos <- as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2)))
mean(vecinos)
vecinos
vecinos <- as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2)))>17
vecinos
vecinos <- as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) > degree(facebook, v=2)
vecinos
vecinos
vecinos <- as.numeric(igraph::degree(facebook, v=neighbors(facebook))) > degree(facebook)
vecinos <- as.numeric(igraph::degree(facebook, v=neighbors(facebook))) > degree(facebook, v=2)
vecinos <- as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) > degree(facebook)
vecinos <- as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) > degree(facebook, v=2)
vecinos
vecinos <- (as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) > degree(facebook, v=2))/as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2)))
vecinos
vecinos <- count.fields(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) > degree(facebook, v=2))
vecinos <- count(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) > degree(facebook, v=2))
vecinos <- count_components(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) > degree(facebook, v=2))
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) > degree(facebook, v=2))
vecinos
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) < degree(facebook, v=2))
vecinos
as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))
as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2)))
as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2)))
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) < degree(facebook, v=2))
vecinos
library(tidyverse)
library(modelr)
options(na.action = na.warn)
sim1 %>% View()
sim1 %>%
ggplot(aes(x,y)) +
geom_point()
paradox =function(x){
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
}
for (i in 3:249){
promedio=paradox(i)
promedio
}
promedio
for (i in 1:4039){
promedio=paradox(i)
}
promedio
paradox =function(x){
vecinos <- cumsum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
}
for (i in 1:4039){
promedio=paradox(i)
}
promedio
sum(promedio)
paradox =function(x){
vecinos <- cumsum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
vecinos <- vecinos + vecinos
}
for (i in 1:4039){
promedio=paradox(i)
}
sum(promedio)
promedio
paradox =function(x){
vecinos <- cumsum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
#vecinos <- vecinos + vecinos
}
EDia=sum(sapply(1:4039,FUN=paradox))
EDia=sapply(1:4039,FUN=paradox)
Edia
EDia
# y = a_0  + a_1 * x
models <- tibble(
a0 = runif(300, -20, 40),
a1 = runif(300, -5,   5)
)
sim1 %>%
ggplot(aes(x,y)) +
geom_abline(aes(intercept = a0, slope = a1), data = models, alpha = 0.2) +
geom_point()
model1 <- function(a0, a1, data){
a0 + data$x * a1
}
model1(3, 1.2, sim1)
rmse <- function(mod, data) {
diff <- data$y - model1(mod[1], mod[2], data)
sqrt(mean(diff^2))
}
rmse(c(3,1.2), sim1)
?sapply
EDia=vapply(1:4039,FUN=paradox)
model1 <- function(a0, a1, data){
a0 + data$x * a1
}
model1(3, 1.2, sim1)
rmse <- function(mod, data) {
diff <- data$y - model1(mod[1], mod[2], data)
sqrt(mean(diff^2))
}
rmse(c(3,1.2), sim1)
sim1_rmse <- function(a0, a1){
rmse(c(a0, a1), sim1)
}
EDia=apply(1:4039,FUN=paradox)
EDia=sapply(1:4039,FUN=paradox)
sum(EDia)
cumsum(EDia)
cumsum(as.numeric(EDia)
cumsum(as.numeric(EDia))
cumsum(as.numeric(EDia))
EDia=mean(sapply(1:4039,FUN=paradox)=
EDia=mean(sapply(1:4039,FUN=paradox))
EDia=mean(sapply(1:4039,FUN=paradox))
EDia
EDia
EDia=sapply(1:4039,FUN=paradox)
EDia
vecinos <- cumsum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) > degree(facebook, v=2))
vecinos
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) > degree(facebook, v=2))
vecinos
paradox =function(x){
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
#vecinos <- vecinos + vecinos
}
EDia=sapply(1:4039,FUN=paradox)
EDia
sum(EDia)
models <- models %>%
mutate(rmse = purrr::map2_dbl(a0, a1, sim1_rmse))
models %>% View()
sim1 %>%
ggplot(aes(x,y)) +
geom_point(size = 2, color = "grey30") +
geom_abline(aes(intercept = a0, slope = a1, color = -rmse),
data = filter(models, rank(rmse) <= 10))
models %>%
filter(rank(rmse) <= 10)
models %>%
ggplot(aes(a0, a1))+
geom_point(data = filter(models, rank(rmse) <= 10), size = 4, color = "red")+
geom_point(aes(color = -rmse))
grid <- expand.grid(
a0 = seq(3,5, length = 25),
a1 = seq(1.9, 2.2, length = 25)
) %>%
mutate(rmse = purrr::map2_dbl(a0, a1, sim1_rmse))
grid %>%
ggplot(aes(a0, a1)) +
geom_point(data = filter(grid, rank(rmse)<=10), size = 4, color = "red")+
geom_point(aes(color = -rmse))
sim1 %>%
ggplot(aes(x,y)) +
geom_point(size = 2, color = "grey30") +
geom_abline(aes(intercept = a0, slope = a1, color = -rmse),
data = filter(models, rank(rmse) <= 10))
# y = a_0  + a_1 * x
models <- tibble(
a0 = runif(300, -20, 40),
a1 = runif(300, -5,   5)
)
sim1 %>%
ggplot(aes(x,y)) +
geom_abline(aes(intercept = a0, slope = a1), data = models, alpha = 0.2) +
geom_point()
model1 <- function(a0, a1, data){
a0 + data$x * a1
}
model1(3, 1.2, sim1)
rmse <- function(mod, data) {
diff <- data$y - model1(mod[1], mod[2], data)
sqrt(mean(diff^2))
}
rmse(c(3,1.2), sim1)
sim1_rmse <- function(a0, a1){
rmse(c(a0, a1), sim1)
}
models <- models %>%
mutate(rmse = purrr::map2_dbl(a0, a1, sim1_rmse))
models %>% View()
sim1 %>%
ggplot(aes(x,y)) +
geom_point(size = 2, color = "grey30") +
geom_abline(aes(intercept = a0, slope = a1, color = -rmse),
data = filter(models, rank(rmse) <= 10))
models %>%
filter(rank(rmse) <= 10)
models %>%
ggplot(aes(a0, a1))+
geom_point(data = filter(models, rank(rmse) <= 10), size = 4, color = "red")+
geom_point(aes(color = -rmse))
grid <- expand.grid(
a0 = seq(3,5, length = 25),
a1 = seq(1.9, 2.2, length = 25)
) %>%
mutate(rmse = purrr::map2_dbl(a0, a1, sim1_rmse))
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) > degree(facebook, v=2))
vecinos
paradox =function(x){
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
vecinos <- vecinos + vecinos
}
EDia=sapply(1:4039,FUN=paradox)
EDia
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))) > degree(facebook, v=2))
vecinos
EDia=sapply(1:4039,FUN=paradox)
EDia=sapply(1:4039,FUN=paradox)
EDia
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=1))) > degree(facebook, v=1))
vecinos
paradox =function(x){
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
}
EDia=sapply(1:4039,FUN=paradox)
EDia
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=3))) > degree(facebook, v=3))
vecinos
filter(EDia, EDia != 0)
filter(EDia, as.numeric(EDia) != 0)
filter(as.numeric(EDia), as.numeric(EDia) != 0)
EDia > 0
sum(EDia > 0)
sum(EDia > 0)/gorder(facebook)
sum(EDia > 1)/gorder(facebook)
sum(EDia > 0)/gorder(facebook)
vecinos <- mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=3))) > degree(facebook, v=3))
vecinos
vecinos <- (as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=3))) > degree(facebook, v=3))
vecinos
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=3))) > mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=3)))
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=3))) > mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=3)))
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=3))) > degree(facebook, v=3))
vecinos
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=3))))
vecinos
vecinos <- mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=3))))
vecinos
vecinos <- degree(facebook, v=3) > mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=3))))
vecinos
vecinos <- degree(facebook, v=3) < mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=3))))
vecinos
vecinos <- degree(facebook, v=2) < mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2)))
vecinos <- degree(facebook, v=2) < mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))))
vecinos
degree(facebook, v=2)
mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))))
vecinos <- sum(degree(facebook, v=2) < mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2)))))
vecinos
as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2)))
mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))))
degree(facebook, v=2)
mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=2))))
vecinos <- mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
paradox1 =function(x){
vecinos <- mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
}
EDia=sapply(1:4039,FUN=paradox1)
EDia
knitr::opts_chunk$set(fig.width=8, fig.height=8, fig.align="center", echo=TRUE, warning=FALSE, message=FALSE,autodep = TRUE,cache=TRUE)
library(knitr)
library(printr)
library(centiserve)
paradox =function(x){
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
}
EDia=sapply(1:4039,FUN=paradox)
Data=read.table("facebook_sample_anon.txt", quote="\"", comment.char="")
facebook=graph_from_data_frame(d=Data, directed=FALSE)
paradox =function(x){
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
}
EDia=sapply(1:4039,FUN=paradox)
sum(EDia > 0)/gorder(facebook)
paradox1 =function(x){
vecinos <- mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
}
EDia=sapply(1:4039,FUN=paradox1)
EDia
knitr::opts_chunk$set(fig.width=8, fig.height=8, fig.align="center", echo=TRUE, warning=FALSE, message=FALSE,autodep = TRUE,cache=TRUE)
library(knitr)
library(printr)
library(igraph)
library(centiserve)
getwd()
Data=read.table("facebook_sample_anon.txt", quote="\"", comment.char="")
facebook=graph_from_data_frame(d=Data, directed=FALSE)
Data=read.table("facebook_sample_anon.txt", quote="\"", comment.char="")
getwd()
setwd(C:/Users/DELL/Documents/UIB/11632 - Redes Sociales y Económicas/Trabajos/Handout 6)
setwd("C:/Users/DELL/Documents/UIB/11632 - Redes Sociales y Económicas/Trabajos/Handout 6")
Data=read.table("facebook_sample_anon.txt", quote="\"", comment.char="")
facebook=graph_from_data_frame(d=Data, directed=FALSE)
getwd()
knitr::opts_chunk$set(fig.width=8, fig.height=8, fig.align="center", echo=TRUE, warning=FALSE, message=FALSE,autodep = TRUE,cache=TRUE)
library(knitr)
library(printr)
library(igraph)
library(centiserve)
Data=read.table("facebook_sample_anon.txt", quote="\"", comment.char="")
facebook=graph_from_data_frame(d=Data, directed=FALSE)
paradox1 =function(x){
vecinos <- mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
}
EDia=sapply(1:4039,FUN=paradox1)
EDia
paradox1 =function(x){
vecinos <- mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))))
}
EDia=sapply(1:4039,FUN=paradox1)
EDia
paradox1 =function(x){
vecinos <- sum(mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x)))) > degree(facebook, v=x))
}
EDia=sapply(1:4039,FUN=paradox1)
EDia
sum(EDia)
sum(EDia)/gorder(facebook)
paradox =function(x){
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
}
EDia=sapply(1:4039,FUN=paradox)
sum(EDia > 0)
getwd()
knitr::opts_chunk$set(fig.width=8, fig.height=8, fig.align="center", echo=TRUE, warning=FALSE, message=FALSE,autodep = TRUE,cache=TRUE)
library(knitr)
library(printr)
library(igraph)
Data=read.table("facebook_sample_anon.txt", quote="\"", comment.char="")
facebook=graph_from_data_frame(d=Data, directed=FALSE)
paradox =function(x){
vecinos <- sum(mean(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x)))) > degree(facebook, v=x))
}
EDia=sapply(1:4039,FUN=paradox)
sum(EDia)/gorder(facebook)
paradox1 =function(x){
vecinos <- sum(as.numeric(igraph::degree(facebook, v=neighbors(facebook,v=x))) > degree(facebook, v=x))
}
EDia=sapply(1:4039,FUN=paradox1)
sum(EDia > 0)
